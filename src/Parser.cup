/*
 * analyseur syntaxique  du langage exemple-expr:
 * expression arithmetique
 * (voir supports de cours)
 *
 * auteur : azim.roussanaly@univ-lorraine.fr
 * (c) 2013
 */ 
package fr.ul.miage.exemple.generated;


/* la grammaire */

terminal EGAL, DEFVAR, DOT, FUNCTION, VOID, ACO, ACF, PO, PF, NUM;
terminal COMP, INF, SUP, DIFF, AFFECT, SUP_EGAL, INF_EGAL,VAR, INT;
terminal PLUS, MOINS, DIV, MULT, IF, ELSE, WHILE, CALL,VIRGUL, RETURN;

non terminal  fichier, ligne, function, parametre, expression, affectation;
non terminal  calcul, type_retour, appel, operateur, iteration, declaration;
non terminal  entite, operation, conditionnelle, condition, appel_function,entite_return;
non terminal  entite_param, return;

start with fichier;

// LECTURE
fichier	::= ligne fichier
		|	ligne
		;

ligne	::= function
		|	expression
		|	ACF
		;

// DECLARATION ET AFFECTATION
declaration	::= DEFVAR VAR DOT
			;

affectation ::= AFFECT VAR EGAL entite DOT
			|	AFFECT VAR EGAL entite calcul DOT
			;

// FONCTION
function 	::= FUNCTION type_retour VAR PO parametre PF ACO
			;

type_retour	::= VOID
			|	INT
			;
			
appel_function 	::= entite PO parametre PF
				;
				
return 	::=	RETURN entite_return DOT
		;
		
// EXPRESSION
expression 	::= declaration
			|	affectation
			|	conditionnelle	
			|	appel
			|	return
			|	iteration
			;

calcul 	::= operation entite
		|	operation entite calcul
		;			

operation	::= PLUS
			|	MOINS
			|	DIV
			|	MULT
			;

conditionnelle 	::=	IF condition ACO expression ACF
				|	IF condition ACO expression ACF ELSE ACO expression ACF
				;
				
iteration	::= WHILE condition ACO expression ACF
			;
			

// AUTRE
entite 	::= NUM
		|	VAR
		|	appel_function
		|	PO entite calcul PF
		;
		
entite_return 	::= entite calcul
				|	entite
				;

entite_param 	::= INT VAR
				| 	entite
				| 	entite calcul
				|
				;

parametre 	::= entite_param
			| 	entite_param VIRGUL parametre
			;				

operateur	::= COMP
			|	INF
			|	SUP
			|	DIFF
			|	SUP_EGAL
			|	INF_EGAL
			;

condition 	::= PO entite operateur entite PF
			;

appel 	::= CALL VAR PO parametre PF DOT
		;
