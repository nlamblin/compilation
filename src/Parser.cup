/*
 * analyseur syntaxique  du langage exemple-expr:
 * expression arithmetique
 * (voir supports de cours)
 *
 * auteur : azim.roussanaly@univ-lorraine.fr
 * (c) 2013
 */ 
package fr.ul.miage.exemple.generated;


/* la grammaire */

terminal EGAL, DEFVAR, DOT, FUNCTION, VOID, ACO, ACF, PO, PF, NUM;
terminal COMP, INF, SUP, DIFF, AFFECT, RET, SUP_EGAL, INF_EGAL,VAR, INT;
terminal PLUS, MOINS, DIV, MULT;

non terminal  file, line, function, parametre, expression, affectation;
non terminal  calcul, type_retour, instruction, def_var, action_affect;
non terminal  entite, operation;

start with file;

file ::= line file
		|line
			{: System.out.println("La fin de fichier fonctionne"); :};

line ::= function
		|expression
		|ACF;

function ::= FUNCTION type_retour VAR PO parametre PF ACO {: System.out.println("La fonction fonctionne"); :};
			
			
type_retour ::= VOID
				|INT;

parametre ::=	INT VAR
				|
				;
				
expression ::= affectation;

affectation ::= action_affect VAR DOT
				| action_affect VAR EGAL entite DOT
				| action_affect VAR EGAL entite calcul DOT;
				
entite ::= NUM
			|VAR;
				
action_affect ::= DEFVAR
				|AFFECT;				

operation ::= PLUS
				|MOINS
				|DIV
				|MULT;
							
calcul ::= operation entite
			| operation entite calcul;
				


